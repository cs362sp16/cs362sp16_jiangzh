        -:    0:Source:cardtest3.c
        -:    0:Graph:cardtest3.gcno
        -:    0:Data:cardtest3.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:/*
        -:    2:steward: choose 1 actions - draw two cards - gain two coins, give up two cards
        -:    3:*/
        -:    4:#include <stdio.h>
        -:    5:#include <stdlib.h>
        -:    6:#include "rngs.h"
        -:    7:#include "dominion.h"
        -:    8:#include "assert.h"
        -:    9:#include "dominion_helpers.h"
        -:   10:
        -:   11:int assert_result(int p1, int p2){
        8:   12:    if(p1==p2)
        4:   13:        return 1;
        -:   14:    else
        4:   15:        return 0;
        8:   16:}    
        -:   17:
        -:   18:int main(){
        -:   19:    
        -:   20:    struct gameState g_s;
        2:   21:    int a_cards[10] = {adventurer, council_room, steward, village, cutpurse, mine, gardens, sea_hag, tribute, smithy};
        -:   22:    int test_result1, test_result2, test_result3, real_result;   
        -:   23:
        2:   24:    printf("\n*****Card test for steward*****\n");
        2:   25:    initializeGame(2, a_cards, 3, &g_s);
        -:   26:
        2:   27:    test_result1 = numHandCards(&g_s);    
        2:   28:	test_result2 = g_s.coins;
        -:   29: 
        2:   30:    real_result = cardEffect(steward, 1, 0, 0, &g_s, 0, 0);
        2:   31:	if(!assert_result(real_result, 0)) 
    #####:   32:        printf("FAILURE 1:  This card cannot be executed\n");
        -:   33:    else{
        2:   34:        printf("PASS 1: This card can be executed\n");
        -:   35:
        2:   36:		real_result = numHandCards(&g_s);
        2:   37:    	if(!assert_result(real_result, test_result1))
        2:   38:        	 printf("Failure 2:  The effact of this card is incorrect\n");   
        -:   39:        else
    #####:   40:            printf("PASS 2: The effact of this card is correct\n");
        -:   41:  
        2:   42:		real_result = cardEffect(steward, 2, 0, 0, &g_s, 0, 0);
        2:   43:		if(!assert_result(real_result, test_result2+2-1))
        2:   44:			printf("Failure 3:  The effact of this card is incorrect\n");   
        -:   45:        else
    #####:   46:            printf("PASS 3: The effact of this card is correct\n");
        -:   47:
        2:   48:		test_result3 = numHandCards(&g_s);
        2:   49:		real_result = cardEffect(steward, 0, 0, 0, &g_s, 0, 0);
        2:   50:		if(!assert_result(real_result, test_result2-2-1))
    #####:   51:			printf("Failure 4:  The effact of this card is incorrect\n");
        -:   52:		else
        2:   53:			printf("PASS 4: The effact of this card is correct\n");
        -:   54:	}
        2:   55:	printf("\n*********************************\n");	
        2:   56:	return 0;	
        -:   57:
        -:   58:}
